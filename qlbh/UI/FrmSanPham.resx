<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_B1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBUVFBgVFRUYGRgaGhoaGBoaGhgaGBwYGRoZGxgYGxob
        IS0kGx0qHxoaJTclKi4xNDQ0GiM6PzozPi0zNDH/2wBDAQsLCxAPEB8SEh06KyMqPDM+Pzw+PD0xOTM/
        MTE0PDM+NjM5MzM2Pjw1MTM0PDM2NDw1PDM3MzMzMzMzMzMzMzP/wAARCACnAS0DASIAAhEBAxEB/8QA
        GwAAAgIDAQAAAAAAAAAAAAAAAQIAAwQFBgf/xABCEAABAwMCBAUCAgUKBQUAAAABAAIRAxIhMUEEBRNR
        BiJhcYEyoZHBQlJisdEHIzNEgoOy0vDxFBZyw+EVQ5KTov/EABoBAQADAQEBAAAAAAAAAAAAAAACAwQB
        BQb/xAArEQACAgEDBAEDAwUAAAAAAAAAAQIRAwQhMRITQVGRFGHwcaGxBSIjgdH/2gAMAwEAAhEDEQA/
        APYXOBBAKrpCDJwo2mRk7JnOuwEAK2YjKakYEHCVnl13/JR7bshAK9hJJAVznAgiUoqAYOyrFMjPbKAN
        JsGThGtmIyi512Agzy67oBqRgQcKt7CSSAme27I9kzagAg7IBnOEETsqqbYMnCgpkZ+UznBwgICVcxGV
        KRgZwgwW67qPbdkeyAV7SSSArS4RE5hAPDRB2SCmZnbVASm0gycBNVM6ZUc4OEDVBgt1QBpGBnCrqNJJ
        IyE7m3ZCZrw0QdQgCXCInMKum0gycBTpmZ21TueHCBqgBVM6ZUomBnCDRbkqOF2QgFqNJJIyFdcIicwl
        a8NEHUJOmZnbVACm0ggnAT1jIxlFzw4QNSlaLclAGkY1wlqNJMjIRcLshFrw0QdUAwcIicwqqbSCCdEe
        mZnbVO54cIGpQAqmRjKlLEzhBrbclR4u02QAqNJMjKsDhETmErXBog6pTTJM7aoAMaQQSFfeO4SOeCIG
        6Ton0QB6s4jVSy3OqY0wMjZKx92CgJ9XpHzqpdbjXfso7y6b/kixt2SgB0rszqp1ZxGuEHVCMDZOaYGe
        2UAtludVPq9I+VGPuwVH+XTdAS63Gu/ZTp3ZmJRa27J9krqhGBsgD1ZxGuFLLc6pjTAz2yka4uwUAZu9
        I+VLrca79lHC3TdFrbsn2QA6d2ZiVOrOI9EHPLcDZP0wM/KAWy3MypN3pHyg1xdgpnC3TdAC63Gu/ZTp
        3ZmJRa27J9krnluBoEAertHopZbmZhN0xE/KRry4wdEAZuxpHypdbjX7IvFuQowXZKAFl2Zif9lOrtHo
        g55BgaBP0xE/KAWy3MzCl12NN+6DXkmDoUzxbkIATbjWfhSy7MxKLBdkpXPLTA0QB6u0einTtzMwm6Yi
        flI15Jg6FAG67Gm/dSbfWfhFzbcj2QaLtdkBLLs6KdWMR6IOcW4CfpgiflAL07czMKdf0+6DXl2DurOi
        PVAVMcSQCVZVECRhF7gQQCq6QgycIA0czOUKpgwMI1sxGfZNSMDOEAWNBAJCqa8kgSo9pJJAVz3CCJQC
        1RAkYS0czOUKQgycJq2YjPsgFqmDAwrGNBAJCFIwM4Vb2kkkBARrzMTurKjQBIwmLhETsqqTYMnCANHM
        zlCqYMDCatmIz7I0jAzjKALACJIVQeZid1HtJJICtdUaBqNO6AD2gCRhLSM65WNT4llwzOokAx+OiWrx
        wLi2x0CPMIIz8yFBzj7JKEn4MqqYOMJ6YBEnJWrfzcM1Y4jc++mn+srB4rxG1j7X03NB1MggfhrpsovN
        BcsksM3wjfB5mJ3VlRoAkYK0dDxRSfcA18NAJdADcziSRGm6NHn9GWyXCe4Mg5wWjPzoiywfkPFNeDc0
        jOuUKpg4wqH8dTdgPEzvjbTO6yaJgZwrE0+CDTQabQRJyVXeZid1KjSSSMhXXCInZdOC1GgCRgpKRk5y
        hTaQQTgJ6xkYz7IAVTBxhNTaCJOShSMa490tRpJkZCABeZid1a8ACQiHCInZU02kEEiEAaRk5yjWMRGE
        axkYz7KUcTOPdAGm0ESclVueZid0ajSTIyrQ4RE7IAPAAkBUdQ90zGkEEhX3juEBS2mRk7JnOuwEOrOI
        1UstzqgIzy67qPbdkKfV6R86qXW413QDCoBg7KsUyM9spuldmdVOrOI1wgC5wcICDPLrupZbnVT6vSPl
        AR7bsj2TNqACDslutxrup07szqgAKZBnbVM5wcIGqHVnEa4UstzqgIzy67qjieJbrOmvp7n8PxC1nH82
        DjaAbQYJafMT2b+Oqo6gBkQY1IzIzie05+Fiy6uMdommGnbVyNka5wLgOwF3yfUev7kpeBkjfXJ/edf9
        oK1lTiXHALgJ2Me4CLalQ6BZnqrL+xRszUAzP4mPWBJwqHkncDUHBODsCT++QeyxahJDdDGpmZM4gbQl
        qveOxxtt6H1TvpoRxp8MurVAQQBPuSGz6SCQf+kQY1WFUoSYa1vmH6IbkHUQCQB8ThV1Kj4IxmJMScbD
        ssd4AZNxuJGA2JJcADd6CTtooPLZcoUY7qLBkAOM4MeX1DmuaCUjuGY4ktYSbSXNI8oz9TS0ggae3crI
        rvkOaGgNJBA1Ijs7b+CxB5TJEjtcWzjSQqXkSZalasNGmYJa2LQLnMhrokSTA82YM7EAq+lxdSAxlRwM
        4OdtJl0SdwBG+uqcE1svqVGSxohrSZ85IgSAJIEnTGPRU8U8vfi1rSAG6gBugkmcjSfQLsc9Ok9ypyhK
        Ti+Tq+Vc9lrRVEHILmg2hwyWkEkjG+i3AYTnEarzoOc0kbwWkgzLT9Q9QV0PJeYua9lJ7m2uaIG4J+n5
        I29RodfQwalvaRkzYEt4nUOeHCBqlaLclSy3MzCl12NFuMhHC7ITNeGiDqlm3GsqWXZmJQA6ZmdtU7nh
        wgalL1do9FOnbmZhARrbclR4u02UuuxpupNnrKALXBog6pTTJM7ao2XZ0U6sYj0QDOeCIGpSdEo9O3Mz
        CnX9PugGNMDI2SsfdgpWOJIBKsqiBIwgFd5dN+/oixt2ShR80zlCqYMDCAjqhGBsnNMDPbKLWggEhVNe
        SQJQDNddgqO8um/dNUaAJGEtLzTOUAWtuyfZK6oRgbKVTBgYVjGgiSEBh8RVsdoDidcztiNFh8z4t7qb
        2tEEjBGuonH/AEz8rOqVWtMuLQN5jIH71qq9QVDbRFp7yPxg6LzdXLLG+mXPityUXTsxuT0QWOvIhotz
        +iJnHvP2WbVa1rLvKfZuMAn3lYvSNKlULvM6HS4bSQCP2oyZXMcVzozgzpkHcATI915WTM4rpjzXwXuU
        5W0dZS4hrgCIEiTMYgZA752S8RxRDQ5gbZ+k4zPa0D8CuBPiF0m4Q7WWhobG2MWn0hX8TzB7KHWqPPTe
        bWMmbnkGdD5QC10x2Wes7XSuCMo5Ekqe51DuZO8wY3APlAziAXTGNx+Kz+EeajA6DBE6Lz7heaPfSa6j
        w8m64A1alhtkQWkgXEiIzgrsPB/jrhuMmkR0a7daboExrYcTB2IB9F6WjwvdSfByM5RtUbJ3Dk4a0k/6
        1K0/G8bQpOc19am1zYBaXEkE98R911XMuKFNhdIEAnJgYE5XgfG1epWfWzVqvc54cAW0muxZaHC97Wjd
        wb9IxutGTFHwzss81weiV+dUGnFRsnQ9+8KzieaNLP5t7mvIBNkCRgT317Ly3/0fjHk1KmG6ueSGgd5L
        sBbXhqzKbDHETEAR5iNJe0sJcwT3BGDiIKxT03mMrf2M8pZpP2dvxHNYphr6jvKW3F0yCZgGPpGdxlNw
        /MOHJAqPcDky1pxpkz3ntsuDZzijRoVqTLqzntM1NW3OGHEkA+XUCNQc7rX8DRfVdfTeIPmc17oa0z5r
        SSBb84hSjpWv7749o41kj/d5PXKPC0zT6l4bguMx5WDWdJ0Bn9yr4EU6pbZBMgNI1BG5gekrjX8YG0at
        MVLm9NxcWiGyADawHXtdiZ9M4/LOa8MwMF3ENcHG4uDCLXtIdhuTJDBHafnsVOSTXKfyRlqppqz2ylxT
        XktDmnvB/DPuFe4W5H3XB+HOaU3PLLPM0tLbz04cPrwcSMeXXC6ui+s4mHMcNtS3XQOGp+F6WLUuS3W/
        2OwmpKzYsF2T9krnluBogSQBsYyBpKsptBEnJWxOyZOmNflI15Jg7oF5mJ3Vr2gCRqugVzbcj2yg0Xa7
        dkKRk5yjVNumEAHOLcBP0wc/KlNoIk5KrLjMTiUAWvLsHdWdEeqj2gCQqOoe6Ave4EGCFVSEHOPdFtMj
        J2TOdcICAFbMRn2TUjAzj3Ss8uu6Dm3GQgA9pJMBXOcIOQlbUAEHZI2mQZOyAFIQc4909bMRn2Uc4OED
        VBnl13QDUjAzj3Vb2kkwEz23ZHsma8AQdkBg83rNay40w/aMTvpg/kuMoeJG0Tc+kGMyLiZdJINroEkY
        Oe4jddTxtam+oOHc8sebXt0Be0ZcGzqbQ4Ee52XH/wApfBU2UqNgIc55uJJILWtMz6y5p+F5uqwzlLqT
        VL5LsGNyyKL4ZzfPefPrVnPY9wafpAJEACJjUE6/Kt8P8Uyk7qPqNa7a55LiBr5TIznMg/jnV8Bw1O8d
        R2CYgaAgTk+pgYXTcHzFlEi3hqQy0eZtznEnJu/RH8Fkj0p2fR5M2GEOiEb/AD2Y3NOZUqotfUYRcXA3
        NDpk7iBvoue5mWljGMfcxt1rbgQHOy5wA0nH4e67x/iqgSW1uGpPaZGA0kAAfrC12+hCro8PyfiHNe0N
        oVJENu6YnYFs2O+FoShLh7meGsjHmDr5ON5P4d4yoW1aVAvDHAgkta0we7iPxXYO5Txb6jTW4Cj0mtAt
        FRrqzXD/ANxlR0mf2Sd9VZx3impTqf8AD8K6lDTlxa4tH7OJz3IB+xi6j4i40tNwpB1szcHDQx5WjGQZ
        lw0PpKTw+eSGow5clSlFJPi9nRpueddwDjw9RxY5rAx9RlSaB/pDgtBdgCXXHPaVzfNOfGlVaafCFjB9
        Qqttc8wNxIZEYDSZ37L0PhOJrPp3PDL7S42/TrgDJOgJJOmAuc5rzCp0y7pMLCIkgwCSRnSRjsqrx+VZ
        56wRjJ2rOQpcQ7iJfUrYa+W0i/yC8uMNa52GgEicxIRY9lGoek86QXtOdpALdRhYHG8Lc8BrQwuOxtYT
        7HA/FNwfAgOaaz3Npndga53Y6ny7HQnIxlaV0tbOj1MC22jaNj15Blp7z2zn4WM54/3Xb8vq8spsBptv
        dByWuc+RknzCW/YZwsfifE3DMBI4N9pIF8MjE4kEgExpKh2vuTlrIrZw+TkOHf5g4GCN5jBaREE5x+Om
        6255wKFNhFKkXkkCo1jWuZoboiLoOo01W3pc94Wpipw5YCbQ42uFx2wVhc75Xw9amavCvEU5L2CcDJBt
        1GAY2wu9tPkwZexme8aLOV8WbmVcvYXND2vALCW2xiTE942K9h4fim1abXtmDtuMZB9l5l4X4EjhA/ou
        c8hrmOAcbqYqPBkDUBtuAAd16hw1IMAEADsJIndWaSEoyfo8ftqEmlxZbSMa490tQEmRkIvF2Qma4NEH
        VbyQwcIiRMKmm0ggnRHpmZ21TueHCBqgBWMjGfZSjiZx7oMFuSo8XabIAVASZGQrA4REiYStcGiDqlNM
        kztqgFY0ggkYWRcO4SOeCIGpVfRKAbqziNVLLc6pjTAyNkrXXYP2QE+v0j81Lrca7qO8um/f0Ra27J+y
        AHSuzOqPVnEa4SuqEYEYTmkBntlALZbnVT6/SFGuuwVHeXTfugJdbjXdTp3ZnVFrbsn2wldUIwNkBwP8
        p3BucKddji0sIAcHWljplpHvkYyCB3K0fNOfni+B6PE0nt4lha9lQMljocPMCD5S5hdIiN94XZ+I/Dtf
        iqrXCqynSY0lotc515BDvLIAx+lJOYgZnk+O5DU4aWhzOIaY8jW1GVBo2WuZIaQ39puB6ALDmm4Nt7L7
        np6ftzgoye69cnOcFWqUw0MpXPkEOfAh2IiSM4wNoU5hxnEWWuebjo1gm1uskDT2gLacT4O4iu1j6b30
        Wk+alUeS5uxLXTJxoD+cCyjy6vT4ipPBudw9gptDLcwRLwC4EbxMGANCsHcw+JL5PQhkxxfBqXV3VuHo
        kzNMPY8kC4FziG6jJtG+kj51/B8K57pcIa3JMFwHYkAGM99TGmo66pyR7YNIlkYitIDm+X6iwO82Ine0
        YmCMPmNHiKbhNGkGOADnCo17CQZ8wIBBnuAF3u9W8aa/U1QeGVXz8Gu4LjL3ljBBnygAkkb4EknTOdQt
        twnHklzWh7S0Fr3EFjSM3B0iYyJGumizKHM3AFtHhasFoBcyk+1xGsFrQYJn42CyL+JqMsq8G6ox2HBz
        YNv9qCD6ydNFRJR6ra/2V5pRlJtpfo2aXjOfMLLab6TgMPDScjcb41HbK1ruf3GC0NAGAP8Azqtyz+Tm
        lJdSqV2O2vDC0SSbS2JcAIEXZ7rG5v4PcGCmy266S/p1Gxgy27SCTPwFdeBPkyqUZKkqf8nO1X9S4u0M
        5xHtJKweG48teGsY136xfJFo1JI0AEmfTdbWv4Q4gRq+BHlDgI9yCpxfKatNobT4aqXbkNNo+RJcVdHN
        iulJP9i9WoVde/bKTx9Gkckl2biRcScfowGtjOnfKyOZcIywcQwNex7S7y4GMuDmgC0g/ge60HE8n4lz
        o6LxA3baPgmAtryO+nTfQqNcwPMh5A3YWObOgkEGf2VdUau9/wBSjrcpdNbfnkxeG4kQHPZgzaTppE67
        Aj7Jn0BJdTfLTrOs/q41MhYTOFqEOpzBYTaDgkyRBb3/AHSpwTJc27yuDgM/qyAT6ga/Ck4oo7Sb32PV
        f5O/EFcuZQqFrmgFrGwGPa1jSQ+IlzIESdyO2fSbrsaLxjwt4jpcPXD6lB7nFhYDTcDaHOBP826J0H6X
        wvTOU+JKdYgNp8Qxx2qUnhsaze0Fn/6WnFJdO7PPz4JQk1Rux5caypZdnSVGC7J+yDnluArjOHq7R6Kd
        O3MzCbpjX5SNeXYO6AJN2NN1Js9ZRc23I9soNF2u3ZASy7OinVjEeiDnFuAn6YOflAL07czoj1/RK2oT
        g7p+gPVAVscSQCVZUECRhM9wgwQqaQg5x7oBqXmmcoVHQYGEa2YjPsmpGBnHugC1oIkhVNeSQCVHtMmA
        Vc5wg5CAWo0ASMJaXmmcpaQg5x7p62YjPsgFqG0wMKxjQRJCFIwM491W9pJMSgNF4x4SvX4R9Og6HuLZ
        ANpcwGXMDticDOCJG613KOH6HD02OaGlrGhzf1XNaA4H5ldmXCNRMLhOfMD6z2uHlG202tJkfK8f+r6X
        vQW9UzZpHu0aTnHj9tNxZw7G1C3Bc4wyezR+l7/hOVruH8b8RVy5wpga2NExuZcCN9uxWdy/kFCS51ME
        k7+66Nnhig5omhSjs5gOPWRlZcGn0+NVGO/t7mqap7nH8R4ic45rvESSWAQ5pDdrbRHmOkg7lY3Ec4Aa
        Aaz3PgBpLaWXEw0udB0kk4mBqYXZv8I8OQP5ilHo0iP/AIwtZxngqiSGimWiNGOcG+xkrT/i8r9jqk+E
        zB5X4ptDWOrFwDDNS1uSD2kbemZ9CVbW8WgE/wA47Qw0RJmIIMDTOdDOnZq3g+i3HTcP7Tj+aXhfBFEi
        RTMkCZcZGNpKg4YOq+n9jq43MDi/FTzHTrOa5wzLQQ0C27WSTIdG0HQThKPj2rTeG1LalO3zOtscT+yA
        SD9tdQt/w/gPhJDntkbtzB9DOoVPMPC3BtkMptHy4fuK7LHga3j/ANI7t0jb8r5zR4ll9J1wGHAyHNPZ
        zTkfmue8aeIOlFGkQHubL3YNg2AB/SOYnt6ha6ly5lF91G6m7Qlrpx2MyCPQ4WHxHLGPeXuuc9xJLi4k
        kn7bdlhwf0/FDL13a8J8lzUunbk0z+NkeapUdnObTmYH4tk+8LG4itdc0PcD5bBM5M6uP6I1mJ00W8PI
        6ZOru+qLeS0t57an+K9iM4LwUuGT2aus29wvdBjDmyJAENLic57aCB6Kr/gCBioCAQ4zrGNO+oiO66Hh
        uUUTq0Z9Xa59Vs6fJuHH6HrqYxvEqzuR9EZRndtmk5NyivV4j+acbmkuuYSHDu5rsRgxJ7/C924MktbM
        /SMHUGBr6rU+E+HYzh2WtDR5pMDMOdEnfst3WMjGfZaMcK3T5MeozObp+AVTbphNTaCJOShSxrj3S1AS
        caeitM4C4zE4mFa9oAkaqBwjUTCqpggidPVAGkbjnKNU26YRrGRjPspRxM490AabQRJyVWXGYnEwpUBJ
        xkeitDhGomEBHtAEjVU9Q90WAgiZhX3DuPsgKW0yDJ2TPIcICnVnEaoBludUBGeXXdB7bjIRPm9I/NS6
        3Gu6AZtQAQdkjaZBk7I9K7M6o9WcRrhARzg4QNUGeXXdSy3Oqh8/pCAD23GQna8AQdQlBtxrusbiw4iW
        gmdh/ErknSOpWxK3EWny5PfZcL4h5i2jxDrzh4DpOBkWkScTifldUKjyYNKoPW0EfYyrXUSRljo7Fpj8
        CFiyKU+Ua8cow4OI5dzelcJe2PcFdMznVL9YfBVj+QUX/Vw1N3vTZ/BY9Twzwo/qrRv5WOH+FZvp34v4
        NDzQlz/Jcea0jPnHbX8tlDzCnP1D7LGHhjhz/V6g9nVR+56V3hfh9OlV+Klb83rn00vv8HFkh+MzRzKn
        H1jP5pjxzIkOGPzWEfCFDXp1h/e1P86n/J1E6Nrn+9f+bl36af4h3MZK/Maf62fRafiePp/rf691s6ng
        6jvT4j/7j/nVf/JNAj+g4k/38f8AcXVpZE1qYLg5fi+KZMysCpxbO67QeBuFODw9f5rn8qitHgHhBk8M
        /wCarz/3FNadr2Pq4nn7uOaN/ukqcwaNwvRx4K4TbhLv7ZP+J6V/hLhm/wBQafcUnf4nqXarwzn1S+3y
        ecs5qwK0eIWbRPacr0Wn4boty3l7PhnDf5llUeWNb9PDtZ7MYP8ACV3t14ZF579GV4d4pg4emy5pMfU0
        hzC4m5wDh2JI+Fu6flydD2ytCeGqNH9G74j8ysjhnVdAx3sbf8yvxzktmjJOEW7TNu8XaJmuDRB1VVJ5
        aPM2CdpCey7Oi0mcHTMztqnc8OEDVDq7R6IdO3M6ICMFuSo8XaKE3Y03U+n1lAM1waIOqQ0yTO2qNl2d
        EerGI9EAXPBEDUqvolN07czoj1/RAQ0wM5wg112D9krHkkAlWVBAkYQCu8um/f0RDbsn7IUvNM5QqOtM
        DCAhqEYEYTmkBnOMotaCJIVTXkmCUAWvuwfsi7y6b901RoAkYKWl5pnKALW3ZPthK6oW4EYUqG0wMKxr
        QRJGUADSAznGUjX3YP2Qa8kxOJVlRoAkYKAUi3Tfui1t2T7YQpebXKFQ2mBhAR1QjA2T9IDOe6LGgiTq
        qg8zE4mEAWvLsFEi3TfumqNAEjBS0jdrlAFrbsn2wlc8twNlKhtMDCsY0ESdUAvSGue6VrycHdAPMxOJ
        hWPaAJGCgA4W5H3Ua27J+yFI3a5Qqm04wgI55bgbJukNc90WNBEnVV3mYnEwgC15ODumc23I+6L2gCRq
        kpG45ygC0XZO3ZBzy3ARqm3TCam0ESclADpjXPdK15dg7oF5mJxMK17QBI1QCltuR7ZQaLtduyFM3GDl
        GqbdMIAOcW4CbpA5z3RptBEnJVZeZicTCALahODun6A9UXtAEjVU9Q90BkVBgqmhqoogDxG3ymo6fKii
        AqqHJWQ8YPsgogKqGqavsoogDQ0+VVVOSoogMh4wfZUUdVFEA9fZGhp8/wAFFEBVVOSsgjHwgogKaP1J
        +I0CiiANDT5VVU5KiiAyCMfCx6R8wUUQFnEaBHh9D7qKICuqfMf9bK/9H4QUQFNI+Yf62VnEaD3UUQA4
        fQquqfMVFEBkAeX4WPSPmCCiAur6fKFDdRRAJW1VzR5R7KKICikchZUKKID/2Q==
</value>
  </data>
</root>