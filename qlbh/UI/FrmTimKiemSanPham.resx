<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAH0AAAB9CAYAAACPgGwlAAAABGdBTUEAALGPC/xhBQAAGItJREFUeF7t
        nQdUU9uax+/09d6bsmZNebPeevNmrXkzc68dRWwoqBcQkCYIqEgRC4qCSFEpiggqXECKiv3ae8EutmuD
        JAoKiFhRr0oSShKwK5Zv9rc5iUnYQBISDHr+a/0WepKcvff3z9nn2/vsc/IdL168ePHixYsXL168ePHi
        xYsXL168ePHixYsXL168ePHixYsXL14aKgH4G4GippdILvESyaVRQoV4HkL+HS1SSKYJZJIxQpmkWyVU
        /i33EV5dTecB/rqoQWIjlElThXJJEeENAXTgPfkiCARyyeIiefVgAPgLbpe8zFWFCsmfyJG7lJgn1TLT
        IIj5D0RycdLVurr/4IrgZS4qqqn5d6FCmku66Lcs8zoM2S/5AqwVyav/yBXJ60sJu3FiyhxCo4ZJpuMF
        IRLL5arAqzMlqHv6P0KFpETLlM5BIblW3Fj731xVeHWGSOZtTYJf38KMzkQmqRM0SG25KvEypXDYRYKu
        azZuWmgOIfXhqsbLFBIpxONIsN+3CP6X5aNIJvHnqsjLmBIoalwwwFoBZ3L6bgWk5y6H8GnBMDPIH2Ln
        RcHW44dAIBMz328EPmAPxFWVlzGESRMJrFwr0Ex+yskEl759INDJATIS5kPWoniInz6VbLOASWPc4MTN
        a8zPGYHnmFxyVebVEeHUKGbLjCC3YFnGMnC17Au7N66GXx/dhse/3lFRVlIIERPHg8/wYXDm/k3m541A
        heDp099wVedlqARy6UJGcFuwv/AXcOzVA44f2KVhtjoPq27CTG9PmB0ymbkPY4AzeFzVeRkivAhCAvlO
        O7AsosJDYe7kAJXBJw7uAv9R9uBlPQgWhoVC1b1yuv3imWMwqkc3OFZezNyPEXgnkku7c03gpa9IAA9q
        BbRVvG2Hwi7SraOxd25dA2+bYXC4RACC+qcQGzMHVqUmq74Q40fYQN7Wjcz9GAWZ9AjXBF66yHvwH3/j
        0KPbuAC30XnJS5OAxczgAJjs46mBY88ecOrQXtXRHOo/QWXC7nMFED05UGX6dC8P8B5hq7kPXy+Ij4th
        lrckNQWW5+XAkWtCTXPbQCCTDuCaxKstOfb4YRQxvBq73/aY4uIMYeO9VczxHw/l1wTU1Lu3roMvSdjU
        j/S8tBSV6euXp2p8FnG36scsRx3Hnt1hXlQEXBQ/ZBqtDhnC7eWaxas1OXTrZkMC2+TYq/v7hAlu79fP
        nwI7Fs9kggacObpfZSKLM8cOgJ/dCDpUWxwVTpM41vuUzCIJ3lxfZ2Z52xJDISvMDwLtbGnZYVMm6TLm
        b7ryvPpfuObxYokE8zrh0+YFIXBudUKb6GK6vswiXfziSV7M8pScyYuHEFc7Wv6WowdYRmszlWvetyl6
        VUwmDSKByBDKxEfJ3zMI6QZ3Hii6sAkDOc3J9jUr2NqYxHRypC+e5MksTx086rH8+eSUwRnbOqSdXPO/
        HYlqa3+PS49IAO61CIgau385RQOZGPg56Mey5kJSkBfdps0Ycv7dtjqXaZ4hPHxQCd5kaBfqMpJZ3tq5
        k1X1Or0yjtZ1esDnRLENnn0z197xXEYavJyg09WwXedO0ECqd6+bE0Jgqpsz7N2xrQVxM0LAvb8lbMrN
        hIL8PR3iyJ5tEBnoB2MGWcG2DetalLV6eQaEjfNW1QvBuob4jWe2RZsimdSKC8vXK5FC6kwaq9e17tZM
        nz91EsjfvGpB3cvnsD43G8aRDB0/1xFGW/SGOQH+UFZxg1nWtfLSDplOTmmBXGi+Pp2A+3+H68iYDW8H
        fU3vTDpqukAmWcaF6OvSXoC/Ig08oN1gXfmaTRcpJFu4MH09AoC/FMokO1gN1pWv3PR8LlRfj4Ry8SJW
        Y/XhqzZdLhVgT8iFq+uLW6Co02qWtjBn029V3YW4kM9DNn1N53gskktml0gkv+VC1zWF94eRxpRpNc4g
        zNl05PGj2x01XcldgVw8hAth1xPJ1CMYjTKIb8h05AMxPr3LTdrQJUxySbVWYwzGnE0Xy+vh2N7txjS9
        GYX0cJdaWkVv7WU1xEC+5kSuHS6X19T8jgureYtk7HsYDTCYb9h0ZL/Z3xJNx+VyiUyr4h1CV9PRADdL
        C/AcPID+3b1lk8br2SnJ4DlogE4UnDgKdx89AJ9h1hrbc5akaOyzrKIcZvv5mNJ0819MWVgv/p5V8Y6g
        q+mFhZcgMSwEPn5ogAOb18D6nCyN102B7NULKC8pNKnphA9XGqr7cCE2PwkVEj9GpTuEPqZHBfrBnQoh
        rP0puYXpD8VPoaS0pEPgPtT3abJEriWFZtXNFzVI/otUarlILrmjVVGjoKvpt+7dgZjgIIgODqScOnlM
        4/WNK3MhimzvCBtXrdDYZyec01WQBNmDC/mXU4lC8U/0CQ86rj03FHNO5Iw0I6cTArnkFBf6LyN80A6p
        yEPtipkCczYdMfLkjAa1b1+RXl1Dbwh/5mzoPAkVYldSoSbtCiK3nsvhxfsmeEl49v4dlDTUtHiPvnxp
        0+tfPQfhFQFsylsJydGRGt39grBZkLt4AaybPwVOrYg1uuklihq48axexb2XinRieuee24UysV3zzfbs
        SpY21sFjEiTk11fP4IpCynyfPnwp08tvVkBG4gLwth5C74Ob7OoMi+eEw5qMZSrS4ufBdE83cO7dE0YT
        wt2bV8O2ZfqDl40gfvPCIOrevr5HTF/aaUc7fUqTTFKn3YgK8g3EI1wb3K79XkPobNNxfJ4UOYcaHRXk
        D6eP7ofnjdV0KNgab15J4dLRnRAX5Evr6mbVH/ZdOstsDzEOGpveGsSzpndNxPAzhJGcLaYVqXCL1S+l
        DbXwidSAJdyOr2t/Rl860/T8vbvp7cxTPdxAdOk00+D2KBWdh+DRjvSOl0VJC6Cw9gmzXYaCCTRniWmF
        l/xYFegMdDW9ozNy+LACLCduahC8f1uvMvHdmzq4cuEkZCbMhVAvd/C3Gw5epIzxw4dCiPtoWBQWAqfz
        d8Kzhqca5p8+eQhcrSxhhv8EOP/kHrNteFB8/PSJgv++/6KBHjBvPrynr6sncsptJnu4ASnjD4QLhBLk
        7ccPCkzO2gITuMrnMrhGKo9JnDKRw65emdypv0+98W2Ru3GNTqYbOiMne/0SUuNj6RF+7ni+yrR3xPjD
        2zfAOBtr+oWIJIlbWlY6ZJMvU25+PmTv3AHpK3MgetYMcBvQn66cXZ2aBA2yX1X7qLxVDOPsRsCkMe5w
        8WkVs33ljfUU/DfmQJiwXed6SPVETrlNKKsZyNlkXBGjf0eIJMx7//Fj4pNXzz8qE7S2wG8rVhyTOGUi
        p57cqb9P2ejWKKgshdDAieBEzq26mm7IjFx6YgJNxIp+Oa4y68Gda6SLHkV7jVRi9E+FIki7WgrLy29C
        TuVdDbJKb0DqmVMQvTwDvEbaggc5n18qOKjal1h8F7xth9G7aQX11cy2slBP+PDAUW7vlLXylQ11Qcrk
        rIwYiAUrj2DlkAy3K9/THniUt5fV422/Y4cNgciA8XDq4E6dTDdkRm66tyfZd3dYmbJQZZLwl2PgMcAS
        oqYGQ/y+gxCTf0zFwrMXmKannTtDST1dAOOnhdBbo7euyFDts7xMCC79LCBzZRazvSzUEz48gJTbRXVP
        /5ezxnRqbHp3gxzxVKSb5yrUfK7Bcw7+H7fro/svSXC5RmiDt/r6OdqT4dFMaHonI4nROZ1M15fa540Q
        7OIEaXFzVebcKL5Iu+ll6csg++adFgazUDcdCd2yEyLSM2hesXfjKtW+9+/ZCqP7WnT0YUafRHL5P3LW
        mE64NptRuMlIy06HCaSbfP2yhgbLVKbv3roZ3Pr3gzpJFS1H+vQO+AwdAgvj5jHNZZFx/QbMO3KihekL
        jh6H9K2byKmpJ00Ccf8fmuQQPMYNombPZLZbJ2SSKs4W04oUdrJF4RzKpM2QBK01xtuNhINb1qqOEFOY
        jrNsfqSc9eQLpixnSVQYzPDxhJyK20yDWfxUXApRBw4zTc8g+0laEAuBDj/SEQCWceHCCTL+7wknbpQw
        294+4j2cLaYVLshnV6A528TzjT4JWltg8oYGP6kqN6np5385C6P79AJF3SNaRuX1QjoZs6qggGlua7Rn
        eva1MvAluck+tW4+yM0FlqQtYba/PQQKyQTOFtOKdCmrWRUwFpelv8Lh4iLIF12G3edOUoPfvGru2k1l
        elpCHMwPmaIqIzM+hiRuk5jGtkV7piOpWRkwycleVda6Vcth4mhHZiza4d3lxsf/zNliWhHT4xkV6DAn
        b16HuXNm0SMMTUWcyNAJ/zbUNx+BiClMD3QaBXs3r6f7x2QR7z/PJud4lrFtoYvpOQIBnZ2rul1Myysr
        a/6/vg8pJEf5Vs4S0+uKQjKMVYmOcLi4ELyGDoY5/uOgVHgWZDUPSEJ1n85sLZgxBV6ozXXrarquM3Jj
        BlrR/R3ft4Xu/1ZZEf3iRW/dAWHb91BSikSQUVoBYTv2qbYh8QVn9TYdmeLuosrkm5pk4Ny3N2w/eZgZ
        m9YQ1UssOUtMLzLCwsWORvndEwTnonFIlhIZRjNapbksHtwpodOcupiu64wcXj3D/dWRLxq+9/zxfeBr
        Y61hpq7oavr8sBmQuzhe1S4/JwdY8fNaZnzaYDN6wdlienX0vI7ZKj6QD5++jM9jwaPt5XOJKggs8reu
        hzWpSXDx5AGdTddlRu7g3l10f29f19Jy9v+cByFe7nTGrT20Z+R0NX1xYgIkzpqmattUXy/6cGJWrNpE
        Jk3lLDG96GVVueR5i0q0A5odNjmQBjmIJDOhY8cQPGD3+hWqACjBcTme954+rKCTJJty0uh2Xbt3XWfk
        mmfhSLL4ujlZ3EPqMp3USX3mrTW0Z+R0NT05aSEkTJ+samvIOG9iegYzZu2ikPhxtphepLAUZiVaATNx
        D3JEx08Phod3r6sarM2H9wrYtjIT0uOi4dC29bAxaxnMDfZXZfDGTuSul5fR/TXIHtP9nz28GyaMsNEw
        U1d0NT02IgyyE2NVbQ5wcYKc9XnMuOlATWF9/T9wtphW+AgRvJ+aUYkWnLpTDh6DrCBvaSI1VdlYFkd2
        bKSBZ72GGNv0J3W1dH+VZUK6/+uC5jF7TlkF09i20NX0meTI3rqyeS4e8xicjt18RKdnzbGRSeI4W0wv
        /OE5UuiTFpXQIj42hnbl70mmqm6gEszOMQgpZMiWFD6D+R4lphiy+doOg6P7ttP9Y4/i3r8vZO/ZzTS2
        LXQxfbmomE7Hll+9QMurqiqn7cFTHyt2OvKIJHWdt1auqLH2zwK55CajIpTCmifgMcAKLhzfr2GeEkzg
        FoZOpQkX63VtTGH6wtlhsHRulKoMrM/CeVFMY9uCZfr0DVsgLCMTwtPSITw9E2ITF8DYIQPpfACWtYv0
        bGNthzJjpw+dOoRD4TmFFLxfuyIIPmgXTZLVNg+JtNmxOhvu32qeqNAFU5iOy6I8Sb7x+lVzBl94+hC4
        9usDqwRCprmtoW16xJIUcCFfeLyMik+TDnR2oOsBvMip7tTBHbSsWWSEgb8bw4qdPuAPAHN2dK641bHX
        1SuDCwLRJOVFBm1WLVnA3N4apjBdLKsHdytLyN+5mZaBececCT4QPyecaW5rqJseEhEOziQ32LUmR2M4
        iqOSHXlZ5EtlAZkLY+lEED4FUz1mhiH9mbOh80Unb+qlw7m7XZ4eryihJlU/uqlqeEcwhelIXnoaXd78
        vFFMy7ldLqDX0rM2rGUazEJpekxuFl19U1J4qkX9lRSdOUIXVwS4OUP+lUKYS75g+JsxHoMGwHi7EZC4
        KAHOVFUyzGVDTrHHOAu+vM5L7v4rOYpkOCvGary+mMr0R5JqOi27eWWWqqyjuzY1Z/L79jBN1kZpuq+T
        A6xSW33TGhnxMeBpPRicyZdr3uQAOu1cfOkknYia6TOGvDYI9l48wzSZwUku5OYh0oXNHztkUJP6hRND
        MZXpCD7fFY/u0quXVOWtz1hCs+30VblMo5HE/fkwe2kqzE77CaZnZtP66ZKn4Htw3/jl0n4Nh3IrkhPo
        NYmzD26xTNaAnNM3cuE2D7laWv7WtW+fygg/n4/qq0MNwZSmI4siZtMVM+Ind1Vl4nw8XrSZ7j0GlqsN
        5TKExRAY4E+O1F4Q7OoEE0i3jHVD1C8Ht4VyRRALHOLiHTNJyYlMozVQSFK4cJuP7L///g9+jvZyHxtr
        uhJG+uR2uxM1LFim70wOo5cnlQHXl4k/2sKtq+coZYUnwJsMqbwHD4Bf1WYOH90tVV3swbn51Mw0CBjr
        CaHki4BtUb4Pz+PLYmYb1DYW2NXjBRmm0erIJJ5cqM1Ll6rvx+GP2uASKO3A60u0t6PKdGOBv8Yw28MB
        3C37gP/wweDR3wIuH2keWinB+YSNy5fSZU9OvbqD+HGlxuvG5urFAhjdtzfb6M+8MtuHDao/aQqXQh0Q
        XtCbPRdOk+60D3gN7g8nc+czzWuPUytjISN0PER4OkC4hx0kk17jUHoUMdyeGr2L9Bx412m0txM4E2NT
        Zk6CJ/evwZGdP0PynJn0+sHs8WNhmvtoplHG5OjuTfT0sW7vDiiUPtY2myJQSA5xITY/FSokf2JVWl/w
        HIdHe6ibAxzJjGEa2xqH0iNh3LD+MGZQb1gQ4QKL57mB3yi8jaknuFr0hO1JMzXev27eZPAa0BdcSILn
        Q5Kq3KR42JC5lGbbOYs+XzQxJjhbhxedkiNCISMuGoIc7cnIYiBMJN18we1y7Xh86vTZOH1Fxu/3tSqt
        N/iNx7td0Hgc6/qNsIZAe9t28R85lHSVPWG0JfmMw0AQXI+D8qrFcO12IsRMGwUu/XpBgJ2NxmcC7GzB
        rZ8FvadN+/40U4EXpoovF2hsa5Q/huigieA/2hGK6p6qYoG/a8OF1nxFEo48dQMNBef0M1Zkgb+Lk2ot
        Xdv8AI69u8FY+96QuGkk+DpawAR7K7h8NZYaf+VGAhmufV6fp85YktRh0NVNMCV4cyRru7zuIXiRJHPV
        lg3KODy89EL6b1xozVcihWSounmdAV7aHWc/HHyd+kHKrh8h9aA9/evr1Bf87AdAIWd8kOuQFitYIkND
        TNaNGwKODCJnhmDdnl2VS3twYTVv4SVAY3TxutJsuC34qBmupNl4POIHwGXRfPAYbNHid1VnBQfQhRws
        A74EOFkUGuj3pqih2oILadeQQCaepR5YU8E6wrVJ3vEjeDtYgPdQkqz1691ivjsxMR5igv2ZBnwJogIm
        fHQfNGA1F8quI3yiMQlorXpwjY0uhisJjxtCJ3dWb/+5xX7wpgu8Enbx5Ofbjb8UuCZhVM/unxx7ft+b
        C2XXkkghDdUOsLHAK3teNoNJl24JS3bbMY1WEh6LhveAvG0tDVeyLGMZvfCCq3tqxZ+nZzsLLHPLinRw
        7tXjo3PvnolcCLue6LldLinUDnBHoYYPGwzjXC1hTqI102gluhiuZM2uLeA7woaZ3bdH1sLmRHC6hyu9
        xIxrALH3wAcdKI3FbXgUsz6PuPbtU0N6o4lc+LquMPskAX2tHWBDQcPH2gwBb8d+EJdrC1HJQ5lmI/oY
        rgSfHHHoaiFzprAtBI9uw43GGrh0rwLKG6Rwve4xnLhyCU4LL26ApkZLRFxVOsR3uPUgh14/WGqD3fmi
        777rvBsbTC0yhJvGCrC+YAKG53DP4RaQvHMkRC62hsSNI5iGRy6ypvPmORsMXnZsDNZxIfg2JZJL1jCC
        ohfhIZPA3bo3LNwwAmKzbajpRjD8g0guHUvql8V4zWCwvZ16S5I5Cn+LjARiLytAuoBH+ShiZOjsQbCE
        ZOpRKUMhfqUtJK7TPNL1NPwTQfWb5rRHauPpmDqBn5dJwjt1ubI5i/6Ml4G/zohLijDZSd76I8xNHdZ8
        Lj9gB5FJn8/peh/hxGSuairhcm/ymkE/GYpr2ASKml7crngpRRdVNv+sNjNwrXGsvJiavmD1cIgkhuO5
        PGHVcFiys3l8rqfhr4T1YjeuSkzhVDJe6CDvfab1WW3keK3B7K+CmYNIQL0IDYwgtkqAhzNM9LaE6CXD
        YNk+O9rFo+ERZNimq+F404Y+89l4WipS1PTEx4AIFeJ5CNlHBP4kNu7nmz9v66urcvF/EiOYN1CwwKGU
        28B+4EOGa1OmWkFwsBUETLCiw7LcDauZn1EDH12e06V+++xrlkgutieGXFUzqFVwnB4xYwq4WfWlq00m
        +46BnWePM9/Lgcna/iv11f/HFcfLnESSIBfS5RcQkz6omWYoL/FcK5BJfuB2z8ucVVj/5A/cVTrs+nW9
        aPORmFxF/q7DdXrn6+r+ntsdr64oUW3t7/E2KoFcHCyUicNoMqWQxpD/TyZGewrrJf34czUvXrx48eLF
        ixcvXrx48eLFixcvXrx48eLFixcvXrx48eLFixcvhr777v8B52Cwic6gql4AAAAASUVORK5CYII=
</value>
  </data>
</root>