<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rjCircularPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GGL4P8Arr/wPB9rSiF53pVcAAAAASUVORK5CYII=
</value>
  </data>
</root>