<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>